{"version":3,"file":"static/js/257.3140b392.chunk.js","mappings":"sPAEaA,EAAYC,EAAAA,EAAAA,IAAH,0CAITC,EAAcD,EAAAA,EAAAA,IAAH,0HAOXE,EAAWF,EAAAA,EAAAA,IAAH,iFAMRG,EAAMH,EAAAA,EAAAA,IAAH,kEAKHI,EAAOJ,EAAAA,EAAAA,GAAH,mF,SC8DjB,EAzEqB,WAAO,IAAD,IACnBK,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCN,EADnC,oBATO,mCASP,oBAGFO,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZN,EAASM,EACV,IACAG,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EACf,GACJ,GAAE,CAACd,IAEJ,IAAQe,EACNZ,EADMY,YAAaC,EACnBb,EADmBa,MAAOC,EAC1Bd,EAD0Bc,aAAcC,EACxCf,EADwCe,SAAUC,EAClDhB,EADkDgB,OAAQC,EAC1DjB,EAD0DiB,aAEtDC,EAAcJ,EAAeA,EAAaK,MAAM,KAAK,GAAK,GAEhE,OACE,UAAClC,EAAD,YACE,mBAAQmC,KAAK,SAAb,UACE,SAAC,KAAD,CAAMC,GAAI5B,EAAoB6B,QAA9B,wBAEF,UAACnC,EAAD,WACGyB,GACC,SAACvB,EAAD,CACEkC,IAAG,yCAAoCX,GACvCY,IAAI,YAGN,+CAGF,UAACpC,EAAD,YACE,0BACGyB,EADH,KACYK,EADZ,QAGA,wCAAgBO,KAAKC,MAAqB,GAAfT,GAA3B,QACA,sCACA,uBAAIF,KACJ,oCACA,wBACGC,GACCA,EAAOW,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,aAIxB,iCACE,mDACA,UAACxC,EAAD,YACE,yBACE,SAAC,KAAD,CAAM+B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid gray;\n`;\n\nexport const CardInfo = styled.div`\ndisplay; flex;\nflex-direction: column;\npadding: 10px;\n`;\n\nexport const Img = styled.img`\n  max-width: 250px;\n  max-height: 100%;\n`;\n\nexport const List = styled.ul`\n  padding-bottom: 10px;\n  border-bottom: 2px solid gray;\n`;\n","import { Suspense } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  CardWrapper,\n  CardInfo,\n  Img,\n  List,\n} from './MovieDetails.styled';\n\nconst API_KEY = '9f9d8f1e33dd4ff41c4595e7766fec8d';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        setMovie(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movie;\n  const releaseYear = release_date ? release_date.split('-')[0] : '';\n\n  return (\n    <Container>\n      <button type=\"button\">\n        <Link to={backLinkLocationRef.current}>Go back</Link>\n      </button>\n      <CardWrapper>\n        {poster_path ? (\n          <Img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"poster\"\n          />\n        ) : (\n          <p>No Image Available</p>\n        )}\n\n        <CardInfo>\n          <h1>\n            {title} ({releaseYear})\n          </h1>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres &&\n              genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </ul>\n        </CardInfo>\n      </CardWrapper>\n      <>\n        <p>Additional information</p>\n        <List>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </List>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","CardWrapper","CardInfo","Img","List","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","movie","setMovie","useEffect","fetch","then","response","json","data","console","log","catch","error","poster_path","title","release_date","overview","genres","vote_average","releaseYear","split","type","to","current","src","alt","Math","round","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}