{"version":3,"file":"static/js/691.a3ab0b3f.chunk.js","mappings":"gPAEaA,EAAYC,EAAAA,EAAAA,IAAH,0CAITC,EAAcD,EAAAA,EAAAA,GAAH,kF,SCgExB,EAhEe,WAAO,IAAD,IACbE,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,UAAQ,UAACI,EAAaE,IAAI,gBAAlB,QAA8B,IAA1E,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAK,UAAGL,EAAaE,IAAI,gBAApB,QAAgC,GAqC3C,OAvBAI,EAAAA,EAAAA,YAAU,WACHD,GAGLE,MAAM,qDAAD,OAzBO,mCAyBP,4DAC6GF,IAE/GG,MAAK,SAAAC,GACJ,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAAG,GACJ,GAA4B,IAAxBA,EAAKC,QAAQC,OACf,OAAOC,MAAM,sBAAD,OAAuBT,IAErCU,QAAQC,IAAIL,GACZb,EAAUa,EAAKC,SACfR,EAAc,GACf,IACAa,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EACf,GACJ,GAAE,CAACb,KAGF,UAACd,EAAD,YACE,kBAAM4B,SArCW,SAAAC,GAGnB,GAFAA,EAAMC,iBAEa,KAAflB,EACF,OAAOW,MACL,mEAIJb,EAAgB,CAAEI,MAAOF,GAC1B,EA2BG,WACE,kBACEmB,KAAK,OACLC,aAAa,MACbC,MAAOrB,EACPsB,SAAU,SAAAL,GAAK,OAAIhB,EAAcgB,EAAMM,OAAOF,MAA/B,KAEjB,mBAAQF,KAAK,SAAb,wBAEF,SAAC7B,EAAD,UACGI,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,CAAeC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMtC,GAA3C,SACGmC,GADQD,EADD,QAQnB,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n\nexport const ListWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { Container, ListWrapper } from './Movies.styled';\n\nconst API_KEY = '9f9d8f1e33dd4ff41c4595e7766fec8d';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') ?? '');\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue === '') {\n      return alert(\n        'Sorry, but we dont find empty string, you shoud write something'\n      );\n    }\n\n    setSearchParams({ query: inputValue });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        if (data.results.length === 0) {\n          return alert(`Sory we dont found ${query}`);\n        }\n        console.log(data);\n        setMovies(data.results);\n        setInputValue('');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [query]);\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          value={inputValue}\n          onChange={event => setInputValue(event.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ListWrapper>\n        {movies.map(({ id, title }) => (\n          <Link key={id} to={`${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        ))}\n      </ListWrapper>\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","ListWrapper","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","inputValue","setInputValue","query","useEffect","fetch","then","response","json","data","results","length","alert","console","log","catch","error","onSubmit","event","preventDefault","type","autoComplete","value","onChange","target","map","id","title","to","state","from"],"sourceRoot":""}